---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  replicas: 1
  image:
    application: gcr.io/fresh-delight-322120/cp-server-connect-operator:6.1.0.0-twitter
    init: confluentinc/cp-init-container-operator:6.1.0.0
  tls:
    autoGeneratedCerts: true
  dependencies:
    kafka:
      bootstrapEndpoint: pkc-lzvrd.us-west4.gcp.confluent.cloud:9092
      authentication:
        type: plain
        jaasConfig:
          secretRef: cloud-plain2
      tls:
        enabled: true
        ignoreTrustStoreConfig: true
    schemaRegistry:
      url: https://psrc-xqq6z.us-central1.gcp.confluent.cloud
      authentication:
        type: basic
        basic:
          secretRef: cloud-sr-access
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-enterprise-control-center-operator:6.1.0.0
    init: confluentinc/cp-init-container-operator:6.1.0.0
  dataVolumeCapacity: 10Gi
  authentication:
    type: basic
    basic:
      secretRef: control-center-user
  tls:
    autoGeneratedCerts: true
  configOverrides:
    server:
      - confluent.metrics.topic.max.message.bytes=8388608
  dependencies:
    kafka:
      bootstrapEndpoint: pkc-lzvrd.us-west4.gcp.confluent.cloud:9092
      authentication:
        type: plain
        jaasConfig:
          secretRef: cloud-plain2
      tls:
        enabled: true
        ignoreTrustStoreConfig: true
    schemaRegistry:
      url: https://psrc-xqq6z.us-central1.gcp.confluent.cloud
      authentication:
        type: basic
        basic:
          secretRef: cloud-sr-access
    ksqldb:
      - name: ksql-dev
        url: http://ksqldb.confluent.svc.cluster.local:8088
    connect:
      - name: connect-dev
        url:  https://connect.confluent.svc.cluster.local:8083
        tls:
          enabled: true
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: streams-classifier
  namespace: confluent
spec:
  serviceName: "streams-classifier"
  replicas: 1
  podManagementPolicy: "Parallel"
  selector:
    matchLabels:
      app: streams-classifier
  template:
    metadata:
      labels:
        app: streams-classifier
    spec:
      containers:
        - name: kafka-streams-stockstat
          image: gcr.io/fresh-delight-322120/kafka-tweets:latest
          env:
            - name: JAVA_TOOL_OPTIONS
              value: -DLOGLEVEL=INFO
          volumeMounts:
            - name: rocksdb
              mountPath: /var/lib/kafka-streams
  volumeClaimTemplates:
    - metadata:
        name: rocksdb
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
